<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on If you torture the data long enough, it will confess ©</title>
    <link>/post/</link>
    <description>Recent content in Posts on If you torture the data long enough, it will confess ©</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>100 &#43; Data Science, Deep Learning, AI &amp; Machine Learning Cheat Sheet PDF</title>
      <link>/post/2021-11-14-100-data-science-deep-learning-ai-machine-learning-cheat-sheet-pdf/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-100-data-science-deep-learning-ai-machine-learning-cheat-sheet-pdf/</guid>
      <description>Link</description>
    </item>
    
    <item>
      <title>A Complete Intuitive Guide To Transfer Learning </title>
      <link>/post/2021-11-14-a-complete-intuitive-guide-to-transfer-learning/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-a-complete-intuitive-guide-to-transfer-learning/</guid>
      <description>Advancements in deep learning have been rapid over the past decade.
While the discovery of neural networks happened almost six decades ago with the invention of the first artificial neural network in 1958 by psychologist Frank Rosenblatt (called the &amp;ldquo;perceptron&amp;rdquo;), the developments in the field did not gain true popularity until about a decade ago.
The most popular achievement in 2009 was the creation of ImageNet. ImageNet is a humungous visual dataset that has led to some of the best modern-day deep learning and computer vision projects.</description>
    </item>
    
    <item>
      <title>A Gentle Introduction to Anomaly Detection with Autoencoders</title>
      <link>/post/2021-11-14-a-gentle-introduction-to-anomaly-detection-with-autoencoders/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-a-gentle-introduction-to-anomaly-detection-with-autoencoders/</guid>
      <description>Anomagram is an interactive visualization tool for exploring how a deep learning model can be applied to the task of anomaly detection (on stationary data).
Given an ECG signal sample, an autoencoder model (running live in your browser) can predict if it is normal or abnormal.
To try it out, click any of the test ECG signals from the ECG5000 dataset below, or better still, draw a signal to see the model&amp;rsquo;s prediction!</description>
    </item>
    
    <item>
      <title>A Guide to Production Level Deep Learning</title>
      <link>/post/2021-11-15-a-guide-to-production-level-deep-learning/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-15-a-guide-to-production-level-deep-learning/</guid>
      <description>Deploying deep learning models in production can be challenging, as it is far beyond training models with good performance.
Several distinct components need to be designed and developed in order to deploy a production level deep learning system (seen below):
Link</description>
    </item>
    
    <item>
      <title>A Visual Guide to Using BERT for the First Time</title>
      <link>/post/2021-11-14-a-visual-guide-to-using-bert-for-the-first-time/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-a-visual-guide-to-using-bert-for-the-first-time/</guid>
      <description>This post is a simple tutorial for how to use a variant of BERT to classify sentences.
This is an example that is basic enough as a first intro, yet advanced enough to showcase some of the key concepts involved.
Link</description>
    </item>
    
    <item>
      <title>Awesome production machine learning</title>
      <link>/post/2021-11-15-awesome-production-machine-learning/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-15-awesome-production-machine-learning/</guid>
      <description>This repository contains a curated list of awesome open source libraries that will help you deploy, monitor, version, scale, and secure your production machine learning.
Link</description>
    </item>
    
    <item>
      <title>Awesome Software Engineering for Machine Learning</title>
      <link>/post/2021-11-14-awesome-software-engineering-for-machine-learning/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-awesome-software-engineering-for-machine-learning/</guid>
      <description>Software Engineering for Machine Learning are techniques and guidelines for building ML applications that do not concern the core ML problem &amp;ndash; e.g. the development of new algorithms &amp;ndash; but rather the surrounding activities like data ingestion, coding, testing, versioning, deployment, quality control, and team collaboration.
Good software engineering practices enhance development, deployment and maintenance of production level applications using machine learning components.
Link</description>
    </item>
    
    <item>
      <title>Bento ML</title>
      <link>/post/2021-11-14-bento-ml/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-bento-ml/</guid>
      <description>BentoML is a flexible, high-performance framework for serving, managing, and deploying machine learning models.
  Supports Multiple ML frameworks, including Tensorflow, PyTorch, Keras, XGBoost and more
  Cloud native deployment with Docker, Kubernetes, AWS, Azure and many more
  High-Performance online API serving and offline batch serving
  Web dashboards and APIs for model registry and deployment management
  Link</description>
    </item>
    
    <item>
      <title>BMW TechOffice MUNICH</title>
      <link>/post/2021-11-14-bmw-techoffice-munich/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-bmw-techoffice-munich/</guid>
      <description>This organization contains software for realtime computer vision published by the members, partners and friends of the BMW TechOffice MUNICH and InnovationLab.
Link</description>
    </item>
    
    <item>
      <title>Cookiecutters (Django &#43; Vue &#43; GraphQL &#43; FastAPI &#43; React &#43; pyTorch)</title>
      <link>/post/2021-11-14-cookiecutters-django-vue-graphql-fastapi-react-pytorch/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-cookiecutters-django-vue-graphql-fastapi-react-pytorch/</guid>
      <description>1.Django + Vue + GraphQL + AWS Cookiecutter
2.Cookiecutter Pipeline for SAM based Serverless App
3.Cookiecutter Python Microservice
4.A cookiecutter template for bootstrapping a FastAPI and React project using a modern stack.
5.Cookiecutter for pyTorch
6.Cookiecutter for Data Science 1
7.Cookiecutter for Data Science 2
8.Cookiecutter for Data Science 3</description>
    </item>
    
    <item>
      <title>Create An Awesome Streamlit App &amp; Deploy it With Docker</title>
      <link>/post/2021-11-14-create-an-awesome-streamlit-app-deploy-it-with-docker/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-create-an-awesome-streamlit-app-deploy-it-with-docker/</guid>
      <description>This article is a comprehensive overview of a step-by-step guide to deploy a simple sentiment analysis application using streamlit and Docker
Link</description>
    </item>
    
    <item>
      <title>Data Lake diagram </title>
      <link>/post/2021-11-14-data-lake-diagram/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-data-lake-diagram/</guid>
      <description>Semantix Data Platform</description>
    </item>
    
    <item>
      <title>Developing and Deploying a Machine Learning Model on Vertex AI using Python</title>
      <link>/post/2021-11-14-developing-and-deploying-a-machine-learning-model-on-vertex-ai-using-python/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-developing-and-deploying-a-machine-learning-model-on-vertex-ai-using-python/</guid>
      <description>Write ML Pipelines that will make your MLOps team happy: follow a clean separation of responsibility between model code and ops code. This article show you how to do that.
Link</description>
    </item>
    
    <item>
      <title>DJANGO COOKIECUTTER</title>
      <link>/post/2021-11-14-django-cookiecutter/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-django-cookiecutter/</guid>
      <description>1.Cookiecutter Django
2.Jumpstart your Django Project with Cookiecutter
3.Using django cookiecutter cloud storage (GCP)
4.AWS Blue Green deployment
5.Cookiecutter Flask
6.Cookiecutter Django + PostGres + Docker + DramatiQ
7.Django + React
8.Django + React example
9.Django + React tutorial</description>
    </item>
    
    <item>
      <title>EvalML</title>
      <link>/post/2021-11-14-evalml/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-evalml/</guid>
      <description>EvalML is an AutoML library which builds, optimizes, and evaluates machine learning pipelines using domain-specific objective functions.
Key Functionality
  Automation - Makes machine learning easier. Avoid training and tuning models by hand. Includes data quality checks, cross-validation and more.
  Data Checks - Catches and warns of problems with your data and problem setup before modeling.
  End-to-end - Constructs and optimizes pipelines that include state-of-the-art preprocessing, feature engineering, feature selection, and a variety of modeling techniques.</description>
    </item>
    
    <item>
      <title>Face Verification With Keras and Streamlit</title>
      <link>/post/2021-11-14-face-verification-with-keras-and-streamlit/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-face-verification-with-keras-and-streamlit/</guid>
      <description>Streamlit enables data scientists and machine learning practitioners to build data and machine learning applications quickly.
In this piece, we will look at how we can use Streamlit to build a face verification application.
However, before we can start verifying faces, we have to detect them. In computer vision, face detection is the task of locating and localizing faces in an image. Face verification is the process of comparing the similarity of two or more images.</description>
    </item>
    
    <item>
      <title>From model inception to deployment</title>
      <link>/post/2021-11-14-from-model-inception-to-deployment/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-from-model-inception-to-deployment/</guid>
      <description>Machine Learning model training &amp;amp; scalable deployment with Flask, Nginx &amp;amp; Gunicorn wrapped in a Docker Container
Link</description>
    </item>
    
    <item>
      <title>Get faster pandas with Modin, even on your laptops</title>
      <link>/post/2021-11-14-get-faster-pandas-with-modin-even-on-your-laptops/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-get-faster-pandas-with-modin-even-on-your-laptops/</guid>
      <description>Modin is an early-stage project at UC Berkeley’s RISELab designed to facilitate the use of distributed computing for Data Science.
It is a multiprocess Dataframe library with an identical API to pandas that allows users to speed up their Pandas workflows.
Link</description>
    </item>
    
    <item>
      <title>HiPlot demonstration</title>
      <link>/post/2021-11-14-hiplot-demonstration/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-hiplot-demonstration/</guid>
      <description>Given about 7000 experimental datapoints, we want to understand which parameters influence the metric we want to optimize: valid ppl. How can HiPlot help?
  On the parallel plot, each line represents one datapoint. Slicing on the valid ppl axis reveals that higher values for lr lead to better models.
  We will focus on higher values for the lr then. Un-slice the valid ppl axis by clicking on the axis, but outside of the current slice.</description>
    </item>
    
    <item>
      <title>How to fine-tune BERT to classify your Slack chats without coding</title>
      <link>/post/2021-11-14-how-to-fine-tune-bert-to-classify-your-slack-chats-without-coding/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021-11-14-how-to-fine-tune-bert-to-classify-your-slack-chats-without-coding/</guid>
      <description>Slack chats can become messy with time, proving difficult to extract meaningful information.
In this article, I want to present a quick codeless way of fine-tuning and deploying the commonly used BERT classifier to do conversational analysis.
We will use that system to extract tasks, facts, and other valuable information from our Slack conversations.
It could be easily extended for categorizing any other textual data, like support requests, emails, etc.</description>
    </item>
    
  </channel>
</rss>
